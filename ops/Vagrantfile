# -*- mode: ruby -*-
# vi: set ft=ruby :

unless Vagrant.has_plugin?('nugrant')
  warn "[\e[1m\e[31mERROR\e[0m]: Please run: vagrant plugin install nugrant"
  exit -1
end

def setup_defaults()
  {
      'box' => {
          'memory' => '2048',
          'cpus' => '1',
          'gui' => false,
          'ports' => [
            { 'guest' => 5432, 'host' => 5432 },
            { 'guest' => 8000, 'host' => 8000 },
          ],
      }
  }
end


postgres_env = {
  "POSTGRES_PASSWORD" => "atompub",
  "POSTGRES_USER" => "atompub",
  "POSTGRES_DB" => "atompub_test",
}

containers = [
  {
    :name => "atompub",
    :build_dir => "../",
    :volumes => ["/vagrant:/opt/vagrant/"],
    :links => ["postgres:postgres"],
    :ports => ["8000:8000"],
    :env => postgres_env,
  },
  {
    :name => "builder",
    :image => "golang:onbuild",
    :volumes => ["/vagrant:/go/src/github.com/ironcamel/go.atompub"],
  },
  {
    :name => "postgres",
    :image => "postgres:9.4",
    :ports => ["5432:5432"],
    :env => postgres_env,
  },
]

Vagrant.configure(2) do |config|

  config.user.defaults = setup_defaults

  # Set up docker containers
  containers.each do |node|
    config.vm.define node[:name] do |cont|
      cont.vm.synced_folder ".", "/vagrant", disabled: true
      cont.vm.provider "docker" do |docker|
        # Attach each docker container to docker-host defined below
        docker.force_host_vm = true
        docker.vagrant_vagrantfile = "./Vagrantfile"
        docker.vagrant_machine = "docker-host"

        docker.name = node[:name]
        docker.image = node[:image]
        docker.volumes = node[:volumes]
        docker.env = node[:env]
        docker.ports = node[:ports]

        if node[:cmd]
          docker.cmd = node[:cmd]
        end

        if node[:build_dir]
          docker.build_dir = node[:build_dir]
        end

        if node[:dockerfile]
          docker.dockerfile = node[:dockerfile]
        end

        if node[:links]
          node[:links].each do |link|
            docker.link(link)
          end
        end

      end
    end
  end



  # docker-host machine
  # This is the Main VM that will run all the docker containers
  config.vm.define "docker-host" do |dh|
    dh.vm.hostname = "docker-host"
    dh.vm.box = "ubuntu/trusty64"
    dh.ssh.insert_key = false

    dh.vm.provision "docker"
    dh.vm.synced_folder "../", "/vagrant"

    dh.vm.provider "virtualbox" do |vb|
      vb.gui = config.user.box.gui
      vb.memory = config.user.box.memory
      vb.cpus = config.user.box.cpus
    end

    config.user.box.ports.each do |port|
      config.vm.network "forwarded_port", guest: port.guest, host: port.host
    end

    # The following line terminates all ssh connections. Therefore
    # Vagrant will be forced to reconnect.
    # That's a workaround to have the docker command in the PATH and
    # add Vagrant to the docker group by logging in/out
    config.vm.provision "shell", :inline =>
      "ps aux | grep 'sshd:' | awk '{print $2}' | xargs kill"
  end

end
