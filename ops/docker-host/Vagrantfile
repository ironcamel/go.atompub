# -*- mode: ruby -*-
# vi: set ft=ruby :

unless Vagrant.has_plugin?('nugrant')
  warn "[\e[1m\e[31mERROR\e[0m]: Please run: vagrant plugin install nugrant"
  exit -1
end

def setup_defaults()
  {
      'box' => {
          'memory' => '2048',
          'cpus' => '1',
          'gui' => false
      }
  }
end

Vagrant.configure(2) do |config|

  config.user.defaults = setup_defaults

  config.vm.define "docker-host" do |dh|
    dh.vm.hostname = "docker-host"
    dh.ssh.insert_key = false
    dh.vm.box = "ubuntu/trusty64"

    dh.vm.provision "docker"
    dh.vm.synced_folder "../../", "/vagrant"

    dh.vm.provider "virtualbox" do |vb|
      vb.gui = config.user.box.gui
      vb.memory = config.user.box.memory
      vb.cpus = config.user.box.cpus
    end

    config.vm.network "forwarded_port", guest: 5432, host: 5432 # Postgres
    config.vm.network "forwarded_port", guest: 8000, host: 8000 # AtomPub

    # The following line terminates all ssh connections. Therefore
    # Vagrant will be forced to reconnect.
    # That's a workaround to have the docker command in the PATH and
    # add Vagrant to the docker group by logging in/out
    config.vm.provision "shell", :inline =>
      "ps aux | grep 'sshd:' | awk '{print $2}' | xargs kill"

  end

end
